{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nclass DataService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.url = 'http://localhost:';\n    this.port = '4001';\n    this.configUrl = '/projects';\n  }\n  getDataMatching(pattern) {\n    console.log('Filter');\n    const fullUrl = this.url + this.port + this.configUrl + '/' + pattern;\n    console.log('Requesting ' + fullUrl);\n    return this.http.get(fullUrl).pipe(catchError(this.handleError));\n  }\n  getData() {\n    const fullUrl = this.url + this.port + this.configUrl;\n    console.log('Requesting ' + fullUrl);\n    return this.http.get(fullUrl).pipe(catchError(this.handleError));\n  }\n  addGroup(projectId, group) {\n    const headers = new HttpHeaders().set('content-type', 'application/json').set('enctype', 'application/json');\n    const fullUrl = this.url + this.port + this.configUrl;\n    console.log('Adding group ');\n    return this.http.put(fullUrl + '/' + projectId, group, {\n      'headers': headers\n    }).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    if (error.status === 0) {\n      alert(\"Server not found\");\n      console.error('An error occurred:', error.error);\n    } else {\n      alert(\"Backend returned code \" + error.status);\n      console.error(`Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    return throwError(() => new Error('Something bad happened; please try again later.' + error.status));\n  }\n}\nDataService.ɵfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DataService,\n  factory: DataService.ɵfac,\n  providedIn: 'root'\n});\nexport { DataService };","map":{"version":3,"names":["throwError","catchError","HttpHeaders","DataService","constructor","http","router","url","port","configUrl","getDataMatching","pattern","console","log","fullUrl","get","pipe","handleError","getData","addGroup","projectId","group","headers","set","put","error","status","alert","Error","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\hazel\\OneDrive\\Documents\\Projects\\OptimiProject\\ClientCode\\OptimiProject\\src\\app\\data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient ,HttpErrorResponse} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  url = 'http://localhost:'\n  port = '4001'\n  configUrl = '/projects';\n  constructor(private http: HttpClient, private router: Router) { }\n  \n  getDataMatching(pattern:String)\n  {\n    console.log('Filter');\n    const fullUrl = this.url+this.port+this.configUrl +'/'+ pattern;\n    console.log('Requesting ' + fullUrl) \n    return this.http.get<any>(fullUrl).pipe(\n      catchError(this.handleError)\n    );\n  }\n  \n  getData()\n  {\n    const fullUrl = this.url+this.port+this.configUrl;\n    console.log('Requesting ' + fullUrl) \n    return this.http.get<any>(fullUrl).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  addGroup(projectId : number,group : { id: number; name: string; url: string; })\n  {\n\n  const headers= new HttpHeaders()\n  .set('content-type', 'application/json')\n  .set('enctype','application/json');\n    const fullUrl = this.url+this.port+this.configUrl;\n    console.log('Adding group ')  ;\n    return this.http.put<any>(fullUrl+'/'+ projectId,group ,  { 'headers': headers }).pipe(\n      catchError(this.handleError)\n    );\n\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      alert(\"Server not found\");\n      console.error('An error occurred:', error.error);\n    } else {\n      alert( \"Backend returned code \"+error.status);\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message.\n    \n    return throwError(() => new Error('Something bad happened; please try again later.' + error.status));\n  }\n   \n}\n\n\n\n\n\n"],"mappings":"AAEA,SAAqBA,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAe,gBAAgB;AAElD,SAASC,WAAW,QAAQ,sBAAsB;;;;AAElD,MAGaC,WAAW;EAItBC,YAAoBC,IAAgB,EAAUC,MAAc;IAAxC,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,MAAM,GAANA,MAAM;IAHpD,KAAAC,GAAG,GAAG,mBAAmB;IACzB,KAAAC,IAAI,GAAG,MAAM;IACb,KAAAC,SAAS,GAAG,WAAW;EACyC;EAEhEC,eAAeA,CAACC,OAAc;IAE5BC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB,MAAMC,OAAO,GAAG,IAAI,CAACP,GAAG,GAAC,IAAI,CAACC,IAAI,GAAC,IAAI,CAACC,SAAS,GAAE,GAAG,GAAEE,OAAO;IAC/DC,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGC,OAAO,CAAC;IACpC,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAMD,OAAO,CAAC,CAACE,IAAI,CACrCf,UAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAC7B;EACH;EAEAC,OAAOA,CAAA;IAEL,MAAMJ,OAAO,GAAG,IAAI,CAACP,GAAG,GAAC,IAAI,CAACC,IAAI,GAAC,IAAI,CAACC,SAAS;IACjDG,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGC,OAAO,CAAC;IACpC,OAAO,IAAI,CAACT,IAAI,CAACU,GAAG,CAAMD,OAAO,CAAC,CAACE,IAAI,CACrCf,UAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAC7B;EACH;EAEAE,QAAQA,CAACC,SAAkB,EAACC,KAAkD;IAG9E,MAAMC,OAAO,GAAE,IAAIpB,WAAW,EAAE,CAC/BqB,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,CACvCA,GAAG,CAAC,SAAS,EAAC,kBAAkB,CAAC;IAChC,MAAMT,OAAO,GAAG,IAAI,CAACP,GAAG,GAAC,IAAI,CAACC,IAAI,GAAC,IAAI,CAACC,SAAS;IACjDG,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B,OAAO,IAAI,CAACR,IAAI,CAACmB,GAAG,CAAMV,OAAO,GAAC,GAAG,GAAEM,SAAS,EAACC,KAAK,EAAI;MAAE,SAAS,EAAEC;IAAO,CAAE,CAAC,CAACN,IAAI,CACpFf,UAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAC7B;EAEH;EAEQA,WAAWA,CAACQ,KAAwB;IAC1C,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;MACtBC,KAAK,CAAC,kBAAkB,CAAC;MACzBf,OAAO,CAACa,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAACA,KAAK,CAAC;KACjD,MAAM;MACLE,KAAK,CAAE,wBAAwB,GAACF,KAAK,CAACC,MAAM,CAAC;MAC7Cd,OAAO,CAACa,KAAK,CACX,yBAAyBA,KAAK,CAACC,MAAM,cAAc,EAAED,KAAK,CAACA,KAAK,CAAC;;IAErE;IAEA,OAAOzB,UAAU,CAAC,MAAM,IAAI4B,KAAK,CAAC,iDAAiD,GAAGH,KAAK,CAACC,MAAM,CAAC,CAAC;EACtG;;AAnDWvB,WAAW,C;mBAAXA,WAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;AAAA;AAAX/B,WAAW,C;SAAXA,WAAW;EAAAgC,OAAA,EAAXhC,WAAW,CAAAiC,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPlC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}