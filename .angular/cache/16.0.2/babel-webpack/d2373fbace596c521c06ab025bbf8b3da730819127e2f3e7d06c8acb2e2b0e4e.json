{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass FocusDirective {\n  set focused(value) {\n    if (value) {\n      console.log(this.renderer.selectRootElement(this.elementRef));\n      this.renderer.selectRootElement(this.elementRef).scrollIntoView();\n    }\n  }\n  constructor(elementRef, renderer) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n  }\n}\nFocusDirective.ɵfac = function FocusDirective_Factory(t) {\n  return new (t || FocusDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n};\nFocusDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n  type: FocusDirective,\n  selectors: [[\"\", \"focused\", \"\"]],\n  inputs: {\n    focused: \"focused\"\n  }\n});\nexport { FocusDirective };","map":{"version":3,"names":["FocusDirective","focused","value","console","log","renderer","selectRootElement","elementRef","scrollIntoView","constructor","i0","ɵɵdirectiveInject","ElementRef","Renderer2","selectors","inputs"],"sources":["C:\\Users\\hazel\\OneDrive\\Documents\\Projects\\OptimiProject\\ClientCode\\OptimiProject\\src\\app\\focus.directive.ts"],"sourcesContent":["import { Directive,Input,ElementRef,Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[focused]'\n})\nexport class FocusDirective {\n\n  @Input()\n  set focused(value: boolean){\n    if(value){\n      console.log(this.renderer.selectRootElement(this.elementRef));\n      this.renderer.selectRootElement(this.elementRef).scrollIntoView();\n    }\n  }\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer2){}\n\n}\n"],"mappings":";AAEA,MAGaA,cAAc;EAEzB,IACIC,OAAOA,CAACC,KAAc;IACxB,IAAGA,KAAK,EAAC;MACPC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,QAAQ,CAACC,iBAAiB,CAAC,IAAI,CAACC,UAAU,CAAC,CAAC;MAC7D,IAAI,CAACF,QAAQ,CAACC,iBAAiB,CAAC,IAAI,CAACC,UAAU,CAAC,CAACC,cAAc,EAAE;;EAErE;EAEAC,YAAoBF,UAAsB,EAAUF,QAAmB;IAAnD,KAAAE,UAAU,GAAVA,UAAU;IAAsB,KAAAF,QAAQ,GAARA,QAAQ;EAAa;;AAV9DL,cAAc,C;mBAAdA,cAAc,EAAAU,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAG,SAAA;AAAA;AAAdb,cAAc,C;QAAdA,cAAc;EAAAc,SAAA;EAAAC,MAAA;IAAAd,OAAA;EAAA;AAAA;SAAdD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}